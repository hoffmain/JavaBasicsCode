What is a Constructor:
    Constructor is a block of code that is used to construct objects.
Why we should use Constructor:
    Constructor help us initialize objects in a cleaner and more readable way.
    They are better than methods because they are called automatically when we create an object.
    Most of the time fields are private and because of this reason we can't access them outside
    the class in which they are declared and can't initialize them.
How to use Constructor:
    We created the constructor by writing a block of code that has the same name as class name.
    Whe we create the object of that class it is called automatically.
Rules:
    1) Constructor don't have return types not even void.
    2) Constructor should have the same name as class name.
    3) Constructor can have access modifiers like private public and protected.
    4) Constructor can't have non access modifiers like static final synchronized.
    5) Default constructor is provided by java if we don't write one.
    6) When we create the object of a class then a Constructor is called. For example if the
    class name is Dog-> Dog dog1=new Dog();
    7) We can create multiple Constructor to give the other user flexibility that they don't
    have to provide all the values to all the instance fields when creating an object of our
    class.
    8) We can call the constructor of a class by using this keyword with parenthesis. this()
    we can pass parameters and java will decide based on these parameters which construct to call.
"this" keyword:
    When ever we can same name variables as instance variables and local variables this keyword
    can help us resolve the conflict between local and instance variable.
class Human{
String name="sleeping Zombie";

void printName(){
String name="wake up zombie";

System.out.println(this.name); //will take local variable
}
}

---------------------------

What is Inheritance?
    Inheritance is a mechanism in java through which we can get the properties and methods from the
    Parent class inside the Child class.
Why we should use Inheritance:
    Inheritance helps us reduce the amount of code that we have to write. For example, if there are
    some properties and methods which are present in many classes, we can create a parent
    class for all of those properties and can put the common properties or methods inside that
    parent class and can make children classes extend from that parent class
How we can use inheritance:
    1) Create a parent class
    2) Put all the common methods and properties from children classes inside that parent class.
    3) Use extends keyword to inherit from that parent class.
Types of Inheritance:
    -Single
    -Multilevel
    -Hierarchical
Rules:
    1) private fields and private methods can't be inherited inside the children classes.
    2) Constructors are also not inherited.





